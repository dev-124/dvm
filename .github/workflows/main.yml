name: Code Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  generate-coverage-report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "^3.8"

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Set up poetry
        shell: bash
        run: curl -sL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

      - name: Update PATH
        shell: bash
        run: echo "$HOME/.local/bin:$PATH" >> $GITHUB_PATH

      - name: Configure poetry
        shell: bash
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cached-poetry-dependencies.outputs.cache-hit == 'true'
        shell: bash
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: poetry install --verbose

      - name: Run tests
        shell: bash
        run: poetry run bash scripts/test-cov-html.sh

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
